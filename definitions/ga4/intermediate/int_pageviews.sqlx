config {
  type: "table",
  schema: dataform.projectConfig.vars.schema,
  tags: ["ga4","intermediate","pageviews"],
  bigquery: { partitionBy: "session_date", clusterBy: ["user_pseudo_id","session_id"] }
}

/* 1) Base rows from RAW + build session_id here */
WITH base AS (
  SELECT
    session_date,
    user_pseudo_id,
    CONCAT(user_pseudo_id, '-', CAST(ga_session_id AS STRING)) AS session_id,
    event_ts,
    page_url,
    page_title,
    theme_category,
    page_category,
    author_name
  FROM ${ref("raw_page_source")}
),

/* 2) Add next-page boundary within the session */
windowed AS (
  SELECT
    b.*,
    ROW_NUMBER() OVER (PARTITION BY session_id ORDER BY event_ts) AS pageview_number,
    LEAD(page_url) OVER (PARTITION BY session_id ORDER BY event_ts) AS next_page_url,
    LEAD(event_ts)  OVER (PARTITION BY session_id ORDER BY event_ts) AS next_event_ts
  FROM base b
),

/* 3) Scroll events within the same page window */
scroll_events AS (
  SELECT
    CONCAT(
      user_pseudo_id, '-',
      CAST(ARRAY(
             SELECT ep.value.int_value
             FROM UNNEST(event_params) ep
             WHERE ep.key = 'ga_session_id'
           )[SAFE_OFFSET(0)] AS STRING)
    ) AS session_id,
    (SELECT ep.value.string_value FROM UNNEST(event_params) ep WHERE ep.key='page_location') AS page_url,
    TIMESTAMP_MICROS(event_timestamp) AS event_ts,
    COALESCE(
      (SELECT ep.value.int_value    FROM UNNEST(event_params) ep WHERE ep.key IN ('percent_scrolled','scroll_percentage')),
      SAFE_CAST((SELECT ep.value.string_value FROM UNNEST(event_params) ep WHERE ep.key IN ('percent_scrolled','scroll_percentage')) AS INT64)
    ) AS scroll_pct
  FROM `hotspawn-440312.analytics_457395054.events_*`
  WHERE event_name IN ('scroll','page_scroll')
    AND _TABLE_SUFFIX BETWEEN
          FORMAT_DATE('%Y%m%d',
            DATE_SUB(CURRENT_DATE('${dataform.projectConfig.vars.tz}'),
                     INTERVAL ${dataform.projectConfig.vars.lookback_days - 1} DAY))
      AND FORMAT_DATE('%Y%m%d', CURRENT_DATE('${dataform.projectConfig.vars.tz}'))
),

/* 4) Engagement time within the same page window */
engagement AS (
  SELECT
    CONCAT(
      user_pseudo_id, '-',
      CAST(ARRAY(
             SELECT ep.value.int_value
             FROM UNNEST(event_params) ep
             WHERE ep.key = 'ga_session_id'
           )[SAFE_OFFSET(0)] AS STRING)
    ) AS session_id,
    (SELECT ep.value.string_value FROM UNNEST(event_params) ep WHERE ep.key='page_location') AS page_url,
    TIMESTAMP_MICROS(event_timestamp) AS event_ts,
    SAFE_CAST(
      (SELECT ep.value.int_value FROM UNNEST(event_params) ep WHERE ep.key='engagement_time_msec')
      AS INT64
    ) AS et_ms
  FROM `hotspawn-440312.analytics_457395054.events_*`
  WHERE event_name = 'user_engagement'
    AND _TABLE_SUFFIX BETWEEN
          FORMAT_DATE('%Y%m%d',
            DATE_SUB(CURRENT_DATE('${dataform.projectConfig.vars.tz}'),
                     INTERVAL ${dataform.projectConfig.vars.lookback_days - 1} DAY))
      AND FORMAT_DATE('%Y%m%d', CURRENT_DATE('${dataform.projectConfig.vars.tz}'))
)

/* 5) Final output with your three metrics */
SELECT
  w.session_date,
  w.user_pseudo_id,
  w.session_id,
  w.page_url,
  w.page_title,
  w.theme_category,
  w.page_category,
  w.author_name,
  MAX(se.scroll_pct)             AS max_scroll_percentage,
  SAFE_DIVIDE(SUM(e.et_ms),1000) AS max_time_on_page,
  w.pageview_number,
  w.next_page_url,
  IF(w.pageview_number = 1, 1, 0) AS isLandingPage,
  IFNULL(IF(w.next_event_ts IS NULL, 1, 0), 0) AS isExitPage,
  (SELECT pv_exit.page_url
     FROM windowed pv_exit
    WHERE pv_exit.session_id = w.session_id
      AND pv_exit.event_ts   = w.next_event_ts) AS exit_page_url
FROM windowed w
LEFT JOIN scroll_events se
  ON  se.session_id = w.session_id
  AND se.page_url   = w.page_url
  AND se.event_ts  >= w.event_ts
  AND (w.next_event_ts IS NULL OR se.event_ts < w.next_event_ts)
LEFT JOIN engagement e
  ON  e.session_id = w.session_id
  AND e.page_url   = w.page_url
  AND e.event_ts  >= w.event_ts
  AND (w.next_event_ts IS NULL OR e.event_ts < w.next_event_ts)
GROUP BY
  w.session_date, w.user_pseudo_id, w.session_id, w.page_url, w.page_title,
  w.theme_category, w.page_category, w.author_name,
  w.pageview_number, w.next_page_url, w.event_ts, w.next_event_ts
