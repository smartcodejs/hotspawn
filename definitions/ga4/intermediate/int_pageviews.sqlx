config {
  type: "table",
  schema: dataform.projectConfig.vars.schema,
  tags: ["ga4","intermediate","pageviews"],
  bigquery: {
    partitionBy: "session_date",
    clusterBy: ["session_id","user_pseudo_id"]
  }
}

/* Work only from the prepared raw_page_source (it contains all GA4 events) */
WITH src AS (
  SELECT
    user_pseudo_id,
    TIMESTAMP(event_ts)      AS event_ts,
    CAST(event_date AS DATE) AS event_date,
    event_name,
    ga_session_id,

    -- helpful params (string/int) already unpacked in raw view
    page_location,           -- url
    page_title,
    author_name,             -- if present on article_view
    scroll_percentage,       -- if present on scroll_depth
    time_spent               -- if present on time_on_page (string like "123s")
  FROM ${ref("raw_page_source")}
),

/* Page view rows only */
pv AS (
  SELECT
    event_date                                                  AS session_date,
    user_pseudo_id,
    CONCAT(CAST(user_pseudo_id AS STRING), "-", CAST(ga_session_id AS STRING)) AS session_id,
    event_ts                                                    AS pageview_time,
    page_location                                               AS page_url,
    page_title
  FROM src
  WHERE event_name = 'page_view' AND ga_session_id IS NOT NULL
),

/* Best-effort theme/page categories from url path */
pv_enriched AS (
  SELECT
    p.*,

    -- theme_category = path segment [1], page_category = path segment [2]
    COALESCE(
      NULLIF(SPLIT(REGEXP_EXTRACT(p.page_url, r'^https?://[^/]+/([^?#]*)'), '/')[SAFE_OFFSET(0)], ''), 'hotspawn'
    ) AS theme_category,
    COALESCE(
      NULLIF(SPLIT(REGEXP_EXTRACT(p.page_url, r'^https?://[^/]+/([^?#]*)'), '/')[SAFE_OFFSET(1)], ''), 'hotspawn'
    ) AS page_category
  FROM pv p
),

/* Article author (from article_view) */
article AS (
  SELECT
    user_pseudo_id,
    page_location AS page_url,
    COALESCE(NULLIF(author_name, ''), 'hotspawn') AS author_name
  FROM src
  WHERE event_name = 'article_view'
),

/* Scroll depth (max per session+url) */
scr AS (
  SELECT
    CONCAT(CAST(user_pseudo_id AS STRING), "-", CAST(ga_session_id AS STRING)) AS session_id,
    page_location AS page_url,
    MAX(scroll_percentage) AS max_scroll_percentage
  FROM src
  WHERE event_name = 'scroll_depth'
  GROUP BY session_id, page_url
),

/* Time on page (max per session+url) */
time_on AS (
  SELECT
    CONCAT(CAST(user_pseudo_id AS STRING), "-", CAST(ga_session_id AS STRING)) AS session_id,
    page_location AS page_url,
    MAX(SAFE_CAST(REGEXP_EXTRACT(time_spent, r'^(\d+)') AS INT64)) AS max_time_on_page
  FROM src
  WHERE event_name = 'time_on_page'
  GROUP BY session_id, page_url
),

/* User type (new vs returning) at user scope */
user_type AS (
  SELECT
    user_pseudo_id,
    CASE WHEN MAX(CASE WHEN event_name = 'first_visit' THEN 1 ELSE 0 END) > 0
         THEN 'New User' ELSE 'Returning User' END AS user_type
  FROM src
  GROUP BY user_pseudo_id
),

numbered AS (
  SELECT
    p.session_date,
    p.user_pseudo_id,
    p.session_id,
    p.page_url,
    p.page_title,
    p.theme_category,
    p.page_category,
    a.author_name,
    s.max_scroll_percentage,
    t.max_time_on_page,
    ROW_NUMBER() OVER (PARTITION BY p.session_id ORDER BY p.pageview_time) AS pageview_number,
    LEAD(p.page_url) OVER (PARTITION BY p.session_id ORDER BY p.pageview_time) AS next_page_url,
    u.user_type,
    p.pageview_time
  FROM pv_enriched p
  LEFT JOIN article  a ON p.user_pseudo_id = a.user_pseudo_id AND p.page_url = a.page_url
  LEFT JOIN scr      s ON p.session_id = s.session_id AND p.page_url = s.page_url
  LEFT JOIN time_on  t ON p.session_id = t.session_id AND p.page_url = t.page_url
  LEFT JOIN user_type u ON p.user_pseudo_id = u.user_pseudo_id
)

SELECT
  session_date,
  user_pseudo_id,
  session_id,
  page_url,
  page_title,
  COALESCE(theme_category, 'hotspawn')                              AS theme_category,
  COALESCE(page_category,  'hotspawn')                              AS page_category,
  COALESCE(author_name,    'hotspawn')                              AS author_name,
  COALESCE(max_scroll_percentage, 10)                               AS max_scroll_percentage,
  COALESCE(max_time_on_page,    15)                                 AS max_time_on_page,
  pageview_number,
  next_page_url,
  user_type,
  CASE WHEN pageview_number = 1 THEN 1 ELSE 0 END                   AS isLandingPage,
  CASE WHEN pageview_number = MAX(pageview_number)
       OVER (PARTITION BY session_id) THEN 1 ELSE 0 END             AS isExitPage,
  LAST_VALUE(page_url) OVER (
    PARTITION BY session_id
    ORDER BY pageview_time
    ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
  ) AS exit_page_url
FROM numbered
