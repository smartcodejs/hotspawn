config {
  type: "incremental",
  schema: dataform.projectConfig.vars.schema,
  tags: ["ga4","intermediate","sessions"],
  bigquery: { partitionBy: "date", clusterBy: ["pseud_id","session_id"] },
  uniqueKey: ["session_id"]
}

WITH base AS (
  SELECT * FROM ${ref("raw_sessions_source")}
  WHERE 1=1
  ${when(incremental(), `
    AND event_date BETWEEN DATE_SUB(CURRENT_DATE('${dataform.projectConfig.vars.tz}'),
                                    INTERVAL ${dataform.projectConfig.vars.lookback_days}-1 DAY)
                       AND CURRENT_DATE('${dataform.projectConfig.vars.tz}')
  `)}
),
utm AS (
  SELECT
    user_pseudo_id,
    ga_session_id,
    -- earliest occurrence within the session (no arrays)
    ANY_VALUE(session_source)  KEEP (DENSE_RANK FIRST ORDER BY event_ts) AS session_source,
    ANY_VALUE(session_medium)  KEEP (DENSE_RANK FIRST ORDER BY event_ts) AS session_medium,
    ANY_VALUE(session_campaign)KEEP (DENSE_RANK FIRST ORDER BY event_ts) AS session_campaign,
    ANY_VALUE(site_name)       KEEP (DENSE_RANK FIRST ORDER BY event_ts) AS site_name
  FROM base
  GROUP BY 1,2
),
geo_device AS (
  SELECT
    user_pseudo_id,
    ga_session_id,
    -- latest snapshot within the session
    ANY_VALUE(geo_country)     KEEP (DENSE_RANK LAST ORDER BY event_ts) AS country,
    ANY_VALUE(device_category) KEEP (DENSE_RANK LAST ORDER BY event_ts) AS device,
    ANY_VALUE(platform)        KEEP (DENSE_RANK LAST ORDER BY event_ts) AS platform
  FROM base
  GROUP BY 1,2
),
session_bounds AS (
  SELECT
    user_pseudo_id,
    ga_session_id,
    MIN(event_ts)   AS session_start_ts,
    MIN(event_date) AS date
  FROM base
  GROUP BY 1,2
),
metrics AS (
  SELECT
    user_pseudo_id,
    ga_session_id,
    COUNTIF(event_name = 'page_view') AS page_view,
    IF(COUNTIF(event_name = 'page_view') = 1, 1, 0) AS bounces,
    IF(COUNTIF(event_name = 'user_engagement') > 0, 1, 0) AS engaged_session,
    COUNTIF(event_name IN ('sign_up','user_signup')) AS user_signup,
    IF(COUNTIF(event_name = 'first_visit') > 0, 'New User', 'Returning User') AS user_type
  FROM base
  GROUP BY user_pseudo_id, ga_session_id
)

SELECT
  sb.date,
  utm.site_name,
  TIME(sb.session_start_ts) AS session_time,
  sb.user_pseudo_id         AS pseud_id,
  CONCAT(sb.user_pseudo_id, '-', CAST(sb.ga_session_id AS STRING)) AS session_id,
  gd.country,
  gd.device,
  gd.platform,
  m.user_type,
  CASE
    WHEN (utm.session_source IS NULL OR utm.session_source = '')
     AND (utm.session_medium IS NULL OR utm.session_medium IN ('', '(not set)', '(none)')) THEN 'Direct'
    WHEN LOWER(utm.session_medium) IN ('cpc','ppc','paidsearch') THEN 'Paid Search'
    WHEN LOWER(utm.session_medium) = 'organic' THEN 'Organic Search'
    WHEN LOWER(utm.session_medium) IN ('social','paid_social') THEN 'Social'
    WHEN LOWER(utm.session_medium) = 'email' THEN 'Email'
    ELSE 'Other'
  END AS channel_grouping,
  utm.session_source,
  utm.session_medium,
  utm.session_campaign,
  m.engaged_session,
  m.bounces,
  m.page_view,
  m.user_signup
FROM session_bounds sb
JOIN utm        ON utm.user_pseudo_id = sb.user_pseudo_id AND utm.ga_session_id = sb.ga_session_id
JOIN geo_device gd ON gd.user_pseudo_id = sb.user_pseudo_id AND gd.ga_session_id = sb.ga_session_id
JOIN metrics    m  ON m.user_pseudo_id = sb.user_pseudo_id AND m.ga_session_id = sb.ga_session_id
