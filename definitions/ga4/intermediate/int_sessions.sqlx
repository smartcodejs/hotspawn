config {
  type: "table",
  schema: dataform.projectConfig.vars.schema,
  tags: ["ga4","intermediate","sessions"],
  bigquery: {
    partitionBy: "DATE(session_start_ts)",
    clusterBy: ["user_pseudo_id","ga_session_id"]
  }
}

WITH base AS (
  SELECT * FROM ${ref("raw_sessions_source")}
),

per_session AS (
  SELECT
    user_pseudo_id,
    ga_session_id,

    MIN(event_ts) AS session_start_ts,
    MAX(event_ts) AS session_end_ts,

    -- First non-null within the session
    ARRAY_AGG(site_name       IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS site_name,
    ARRAY_AGG(session_source  IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS session_source,
    ARRAY_AGG(session_medium  IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS session_medium,
    ARRAY_AGG(session_campaign IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS session_campaign,

    -- Last known device/geo/platform in the session
    ARRAY_AGG(geo_country     IGNORE NULLS ORDER BY event_ts DESC)[SAFE_OFFSET(0)] AS geo_country,
    ARRAY_AGG(device_category IGNORE NULLS ORDER BY event_ts DESC)[SAFE_OFFSET(0)] AS device_category,
    ARRAY_AGG(platform        IGNORE NULLS ORDER BY event_ts DESC)[SAFE_OFFSET(0)] AS platform,

    -- Counts
    COUNTIF(event_name = 'page_view')           AS page_views,
    COUNTIF(event_name = 'user_engagement') > 0 AS has_engagement
  FROM base
  GROUP BY user_pseudo_id, ga_session_id
),

with_user AS (
  SELECT
    s.*,
    u.first_seen,
    u.signup_occurred
  FROM per_session s
  LEFT JOIN ${ref("int_users")} u USING (user_pseudo_id)
)

SELECT
  DATE(session_start_ts)                                               AS date,
  COALESCE(site_name, 'hotspawn')                                      AS site_name,
  TIME(session_start_ts)                                               AS session_time,
  user_pseudo_id                                                       AS pseud_id,
  CONCAT(user_pseudo_id, '-', CAST(ga_session_id AS STRING))           AS session_id,
  geo_country                                                          AS country,
  device_category                                                      AS device,
  platform,

  CASE WHEN DATE(session_start_ts) = first_seen THEN 'New User' ELSE 'Returning User' END AS user_type,

  -- simple channel grouping
  CASE
    WHEN session_medium IS NULL OR session_medium IN ('(not set)','(none)') THEN 'Direct'
    WHEN LOWER(session_medium) IN ('cpc','ppc','paidsearch','sem')            THEN 'Paid Search'
    WHEN LOWER(session_medium) LIKE '%social%' OR LOWER(session_source) IN ('facebook','instagram','twitter','tiktok','linkedin') THEN 'Social'
    WHEN LOWER(session_medium) IN ('email')                                   THEN 'Email'
    WHEN LOWER(session_medium) IN ('affiliate')                               THEN 'Affiliate'
    WHEN LOWER(session_medium) IN ('referral')                                THEN 'Referral'
    WHEN LOWER(session_medium) IN ('display','cpm')                           THEN 'Display'
    ELSE 'Other'
  END AS channel_grouping,

  session_source,
  session_medium,
  session_campaign,

  IF(page_views = 1 AND NOT has_engagement, 1, 0)                     AS bounces,
  IF(has_engagement, 1, 0)                                            AS engaged_session,
  page_views                                                          AS page_view,
  IF(signup_occurred, 1, 0)                                           AS user_signup
FROM with_user
