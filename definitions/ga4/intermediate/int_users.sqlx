config {
  type: "table",
  schema: dataform.projectConfig.vars.schema,
  tags: ["ga4","intermediate","users"],
  bigquery: {
    partitionBy: "DATE(first_seen_ts)",
    clusterBy: ["user_pseudo_id"]
  }
}

WITH base AS (
  SELECT
    user_pseudo_id, event_ts, event_date, event_name,
    ga_session_id,
    session_source, session_medium, session_campaign,
    ts_source, ts_medium, ts_campaign,
    site_name,
    geo_country, device_category, device_operating_system,
    mobile_brand_name, mobile_model_name, platform,
    event_user_id, userprop_user_id
  FROM ${ref("raw_users_source")}
),

user_id_latest AS (
  SELECT
    user_pseudo_id,
    COALESCE(
      ARRAY_AGG(event_user_id    IGNORE NULLS ORDER BY event_ts DESC)[SAFE_OFFSET(0)],
      ARRAY_AGG(userprop_user_id IGNORE NULLS ORDER BY event_ts DESC)[SAFE_OFFSET(0)]
    ) AS user_id
  FROM base
  GROUP BY user_pseudo_id
),

first_device_geo AS (
  SELECT
    user_pseudo_id,
    ARRAY_AGG(device_category         IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_device_category,
    ARRAY_AGG(device_operating_system IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_device_operating_system,
    ARRAY_AGG(mobile_brand_name       IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_mobile_brand_name,
    ARRAY_AGG(mobile_model_name       IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_mobile_model_name,
    ARRAY_AGG(platform                IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_platform,
    ARRAY_AGG(geo_country             IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_geo_country
  FROM base
  GROUP BY user_pseudo_id
),

first_from_ts AS (
  SELECT
    user_pseudo_id,
    ARRAY_AGG(ts_source   IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_ts_source,
    ARRAY_AGG(ts_medium   IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_ts_medium,
    ARRAY_AGG(ts_campaign IGNORE NULLS ORDER BY event_ts ASC)[SAFE_OFFSET(0)] AS first_ts_campaign
  FROM base
  GROUP BY user_pseudo_id
),

user_rollup AS (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS first_seen,
    MIN(event_ts)   AS first_seen_ts,
    COUNT(DISTINCT IF(event_name = 'session_start', ga_session_id, NULL)) AS sessions_by_key,
    COUNT(DISTINCT IF(event_name = 'session_start' AND site_name = 'Microsite', ga_session_id, NULL))
      AS microsite_sessions,
    ARRAY_AGG(
      IF(event_name IN ('sign_up','user_signup'), event_ts, NULL)
      IGNORE NULLS ORDER BY event_ts ASC
    )[SAFE_OFFSET(0)] AS signup_timestamp,
    COUNT(*) AS event_rows
  FROM base
  GROUP BY user_pseudo_id
)

SELECT
  r.user_pseudo_id,
  uid.user_id,
  r.first_seen,
  r.first_seen_ts,
  IF(r.sessions_by_key > 0, r.sessions_by_key, IF(r.event_rows > 0, 1, 0)) AS total_sessions,
  IF(r.signup_timestamp IS NULL, 0, 1) AS signup_occurred,
  r.signup_timestamp,
  DATE(r.signup_timestamp) AS signup_date,
  ts.first_ts_source   AS first_utm_source,
  ts.first_ts_medium   AS first_utm_medium,
  ts.first_ts_campaign AS first_utm_campaign,
  r.microsite_sessions,
  fdg.first_geo_country,
  fdg.first_device_category,
  fdg.first_device_operating_system,
  fdg.first_mobile_brand_name,
  fdg.first_mobile_model_name,
  fdg.first_platform
FROM user_rollup r
LEFT JOIN user_id_latest   uid USING (user_pseudo_id)
LEFT JOIN first_from_ts    ts  USING (user_pseudo_id)
LEFT JOIN first_device_geo fdg USING (user_pseudo_id)
